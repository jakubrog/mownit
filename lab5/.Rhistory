remove(avg_times)
remove(avg_times)
remove(list = avg_times)
remove(avg_results)
naive_time_mean = aggregate(naive_time ~ columns_and_rows, data = results, FUN = mean)
better_time_mean = aggregate(better_time ~ columns_and_rows, data = results, FUN = mean)
blas_time_mean = aggregate(blas_time ~ columns_and_rows, data = results, FUN = mean)
help("ggplot2")
help("ggplot")
geom_errorbar(aes(ymin=len-sd, ymax=len+sd), width=.2,
position=position_dodge(.9))
last_plot() + geom_errorbar(aes(ymin=len-sd, ymax=len+sd), width=.2,
position=position_dodge(.9))
View(better_time_mean)
View(results)
better_time_mean = aggregate(better_time ~ columns_and_rows, data = better_time_mean, FUN = sd)$better_time
remove
remove(list = ls())
results = read.csv("resultO0.csv", sep = ";")
avg_results = aggregate(time ~ columns_and_rows, data = results)
naive_time_mean = aggregate(naive_time ~ columns_and_rows, data = results, FUN = mean)
better_time_mean = aggregate(better_time ~ columns_and_rows, data = results, FUN = mean)
blas_time_mean = aggregate(blas_time ~ columns_and_rows, data = results, FUN = mean)
naive_time_mean$sd = aggregate( naive_time ~ columns_and_rows, data=results, FUN=sd)$naive_time
naive_time_mean
ggplot(naive_time_mean, aes(x=columns_and_rows, y=naive_time_mean)) + geom_point()
ggplot(naive_time_mean, aes(x=columns_and_rows, y=naive_time)) + geom_point()
naive_time_mean$sd = aggregate( naive_time ~ columns_and_rows, data=results, FUN=sd)$naive_time
ggplot(naive_time_mean, aes(x=columns_and_rows, y=naive_time)) + geom_point() +
geom_errorbar(aes(ymin=naive_time - sd, ymax=naive_time + sd)
ggplot(avg_results, aes(n,time)) + geom_point()
ggplot(naive_time_mean, aes(x=columns_and_rows, y=naive_time)) + geom_point() +
geom_errorbar(aes(ymin=naive_time - sd, ymax=naive_time + sd))
ggplot(naive_time_mean, aes(x=columns_and_rows, y=naive_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=naive_time - sd, ymax=naive_time + sd))
naive_plot = ggplot(naive_time_mean, aes(x=columns_and_rows, y=naive_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=naive_time - sd, ymax=naive_time + sd))
View(naive_plot)
View(naive_plot)
View(naive_plot)
View(naive_plot)
View(naive_plot)
naive_plot
naive_plot <- ggplot(naive_time_mean, aes(x=columns_and_rows, y=naive_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=naive_time - sd, ymax=naive_time + sd)) + labs(title="Naive mulitplication time",
x="Size", y = "Time") + theme_classic()
naive_plot <- ggplot(naive_time_mean, aes(x=columns_and_rows, y=naive_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=naive_time - sd, ymax=naive_time + sd)) + labs(title="Naive mulitplication time",
x="Size", y = "Time") + theme_classic()
naive_plot
naive_plot <- ggplot(naive_time_mean, aes(x=columns_and_rows, y=naive_time)) + geom_point(color="red") +
geom_pointrange(aes(ymin=naive_time - sd, ymax=naive_time + sd)) + labs(title="Naive mulitplication time",
x="Size", y = "Time") + theme_classic()
naive_plot
naive_plot <- ggplot(naive_time_mean, aes(x=columns_and_rows, y=naive_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=naive_time - sd, ymax=naive_time + sd)) + labs(title="Naive mulitplication time",
x="Size", y = "Time") + theme_classic()
naive_plot
naive_plot <- ggplot(naive_time_mean, aes(x=columns_and_rows, y=naive_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=naive_time - sd, ymax=naive_time + sd)) + labs(title="Naive mulitplication time",
x="Size", y = "Time") + theme_dark()
naive_plot
naive_plot <- ggplot(naive_time_mean, aes(x=columns_and_rows, y=naive_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=naive_time - sd, ymax=naive_time + sd)) + labs(title="Naive mulitplication time",
x="Size", y = "Time") + theme_light()
naive_plot
better_time_mean$sd = aggregate( better_time ~ columns_and_rows, data=results, FUN=sd)$better_time
better_plot <- ggplot(better_time_mean, aes(x=columns_and_rows, y=better_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=better_time - sd, ymax=better_time + sd)) + labs(title="Better mulitplication time",
x="Size", y = "Time") + theme_light()
better_plot
blas_time_mean$sd = aggregate(blas_time ~ columns_and_rows, data=results, FUN=sd)$blas_time
blas_plot <- ggplot(blas_time_mean, aes(x=columns_and_rows, y=blas_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=blas_time - sd, ymax=blas_time + sd)) + labs(title="BLAS mulitplication time",
x="Size", y = "Time") + theme_light()
blas_plot
blas_plot + naive_plot
better_time_mean
fit = lm(y ~ poly(x, 3, raw=TRUE), data=better_time_mean)
fit = lm(better_time ~ poly(x, 3, raw=TRUE), data=mydata)
fit = lm(better_time ~ poly(x, 3, raw=TRUE), data=better_time_mean)
fit = lm(better_time ~ poly(columns_and_rows, 3, raw=TRUE), data=better_time_mean)
git
fit
plot(fit)
x = c(32,64,96,118,126,144,152.5,158)
y = c(99.5,104.8,108.5,100,86,64,35.3,15)
mydata = data.frame(x,y)
x = c(32,64,96,118,126,144,152.5,158)
y = c(99.5,104.8,108.5,100,86,64,35.3,15)
mydata = data.frame(x,y)
fit = lm(y ~ poly(x, 3, raw=TRUE), data=mydata)
fit
ggplot(mydata,aes(x,y)) + geom_point()
newdata$y = predict(fit, newdata)
last_plot() + geom_line(data=newdata, aes(x,y))
x = c(32,64,96,118,126,144,152.5,158)
y = c(99.5,104.8,108.5,100,86,64,35.3,15)
mydata = data.frame(x,y)
fit = lm(y ~ poly(x, 3, raw=TRUE), data=mydata)
ggplot(mydata,aes(x,y)) + geom_point()
newdata = data.frame(x = seq(30,160, length.out=250))
newdata$y = predict(fit, newdata)
last_plot() + geom_line(data=newdata, aes(x,y))
newdata = data.frame(x = seq(10,160, len=250))
View(newdata)
fit = lm(y ~ poly(x, 3, raw=TRUE), data=mydata)
newdata = data.frame(x = seq(50,1000, len=2500))
newdata$y = predict(fit, newdata)
last_plot() + geom_line(data=newdata, aes(x,y))
blas_time_mean$sd = aggregate(blas_time ~ columns_and_rows, data=results, FUN=sd)$blas_time
blas_plot <- ggplot(blas_time_mean, aes(x=columns_and_rows, y=blas_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=blas_time - sd, ymax=blas_time + sd)) + labs(title="BLAS mulitplication time",
x="Size", y = "Time") + theme_light()
fit = lm(blas_time_mean ~ poly(columns_and_rows, 3, raw=TRUE), data=mydata)
newdata = data.frame(x = seq(50,1000, len=2500))
newdata$y = predict(fit, newdata)
last_plot() + geom_line(data=newdata, aes(x,y))
blas_time_mean$sd = aggregate(blas_time ~ columns_and_rows, data=results, FUN=sd)$blas_time
blas_plot <- ggplot(blas_time_mean, aes(x=columns_and_rows, y=blas_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=blas_time - sd, ymax=blas_time + sd)) + labs(title="BLAS mulitplication time",
x="Size", y = "Time") + theme_light()
results = read.csv("resultO0.csv", sep = ";")
naive_time_mean = aggregate(naive_time ~ columns_and_rows, data = results, FUN = mean)
better_time_mean = aggregate(better_time ~ columns_and_rows, data = results, FUN = mean)
blas_time_mean = aggregate(blas_time ~ columns_and_rows, data = results, FUN = mean)
#naive
naive_time_mean$sd = aggregate( naive_time ~ columns_and_rows, data=results, FUN=sd)$naive_time
naive_plot <- ggplot(naive_time_mean, aes(x=columns_and_rows, y=naive_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=naive_time - sd, ymax=naive_time + sd)) + labs(title="Naive mulitplication time",
x="Size", y = "Time") + theme_light()
naive_plot
blas_time_mean$sd = aggregate(blas_time ~ columns_and_rows, data=results, FUN=sd)$blas_time
blas_plot <- ggplot(blas_time_mean, aes(x=columns_and_rows, y=blas_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=blas_time - sd, ymax=blas_time + sd)) + labs(title="BLAS mulitplication time",
x="Size", y = "Time") + theme_light()
blas_time_mean$sd = aggregate(blas_time ~ columns_and_rows, data=results, FUN=sd)$blas_time
blas_plot <- ggplot(blas_time_mean, aes(x=columns_and_rows, y=blas_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=blas_time - sd, ymax=blas_time + sd)) + labs(title="BLAS mulitplication time",
x="Size", y = "Time") + theme_light()
blas_plot
blas_time_mean$sd = aggregate(blas_time ~ columns_and_rows, data=results, FUN=sd)$blas_time
blas_plot <- ggplot(blas_time_mean, aes(x=columns_and_rows, y=blas_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=blas_time - sd, ymax=blas_time + sd)) + labs(title="BLAS mulitplication time",
x="Size", y = "Time") + theme_light()
blas_plot
fit = lm(blas_time_mean ~ poly(columns_and_rows, 3, raw=TRUE), data=blas_time_mean)
newdata = data.frame(x = seq(50,1000, len=2500))
newdata$y = predict(fit, newdata)
last_plot() + geom_line(data=newdata, aes(x,y))
blas_time_mean$sd = aggregate(blas_time ~ columns_and_rows, data=results, FUN=sd)$blas_time
blas_plot <- ggplot(blas_time_mean, aes(x=columns_and_rows, y=blas_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=blas_time - sd, ymax=blas_time + sd)) + labs(title="BLAS mulitplication time",
x="Size", y = "Time") + theme_light()
blas_plot
fit = lm(blas_time_mean ~ poly(columns_and_rows, 3, raw=TRUE), data=blas_time_mean)
View(blas_time_mean)
fit = lm(blas_time ~ poly(columns_and_rows, 3, raw=TRUE), data=blas_time_mean)
blas_time_mean$sd = aggregate(blas_time ~ columns_and_rows, data=results, FUN=sd)$blas_time
blas_plot <- ggplot(blas_time_mean, aes(x=columns_and_rows, y=blas_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=blas_time - sd, ymax=blas_time + sd)) + labs(title="BLAS mulitplication time",
x="Size", y = "Time") + theme_light()
blas_plot
fit = lm(blas_time ~ poly(columns_and_rows, 3, raw=TRUE), data=blas_time_mean)
newdata = data.frame(x = seq(50,1000, len=2500))
newdata$y = predict(fit, newdata)
last_plot() + geom_line(data=newdata, aes(x,y))
blas_time_mean[1]
fit = lm(blas_time_mean[2] ~ poly(blas_time_mean[1], 3, raw=TRUE), data=blas_time_mean)
fit = lm(blas_time_mean[2] ~ poly(blas_time_mean[1], 3, raw=TRUE), data=blas_time_mean)
fit = lm(blas_time ~ poly(blas_time_mean[1], 3, raw=TRUE), data=blas_time_mean)
fit = lm(columns_and_rows ~ poly(blas_time, 3, raw=TRUE), data=blas_time_mean)
newdata = data.frame(x = seq(50,1000, len=2500))
fit = lm( blas_time ~ poly(columns_and_rows, 3, raw=TRUE), data=blas_time_mean)
blas_time_mean$sd = aggregate(blas_time ~ columns_and_rows, data=results, FUN=sd)$blas_time
blas_plot <- ggplot(blas_time_mean, aes(x=columns_and_rows, y=blas_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=blas_time - sd, ymax=blas_time + sd)) + labs(title="BLAS mulitplication time",
x="Size", y = "Time") + theme_light()
blas_plot
fit = lm( blas_time ~ poly(columns_and_rows, 3, raw=TRUE), data=blas_time_mean)
newdata = data.frame(x = seq(50,1000, len=2500))
newdata$y = predict(fit, newdata)
last_plot() + geom_line(data=newdata, aes(x,y))
naive_plot
fit = lm( blas_time ~ poly(columns_and_rows, 3, raw=TRUE), data=blas_time_mean)
fit
newdata = data.frame(x = seq(50,1000, len=2500))
newdata$y = predict(fit, newdata)
fit
?prdeict
?predict
predict(fit)
predict(fit, seq(1,100))
fit = lm( blas_time ~ poly(columns_and_rows, 3, raw=TRUE), data=blas_time_mean)
newdata = data.frame(columns_and_rows = seq(50,1000, len=2500))
newdata$y = predict(fit, newdata)
last_plot() + geom_line(data=newdata, aes(x,y))
fit = lm( blas_time ~ poly(columns_and_rows, 3, raw=TRUE), data=blas_time_mean)
newdata = data.frame(columns_and_rows = seq(50,1000, len=2500))
newdata$y = predict(fit, newdata)
lines(newdata)
blas_time_mean$sd = aggregate(blas_time ~ columns_and_rows, data=results, FUN=sd)$blas_time
blas_plot <- ggplot(blas_time_mean, aes(x=columns_and_rows, y=blas_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=blas_time - sd, ymax=blas_time + sd)) + labs(title="BLAS mulitplication time",
x="Size", y = "Time") + theme_light()
blas_plot
fit = lm( blas_time ~ poly(columns_and_rows, 3, raw=TRUE), data=blas_time_mean)
newdata = data.frame(columns_and_rows = seq(50,1000, len=2500))
newdata$y = predict(fit, newdata)
lines(newdata)
newdata = data.frame(columns_and_rows = seq(30,160, length.out=250))
newdata
lines(newdata)
newdata = data.frame(columns_and_rows = seq(50,1000, len=250))
fit = lm( blas_time ~ poly(columns_and_rows, 3, raw=TRUE), data=blas_time_mean)
newdata = data.frame(columns_and_rows = seq(50,1000, len=250))
newdata
newdata$y = predict(fit, newdata)
lines(newdata)
last_plot() + geom_line(data=newdata, aes(x,y))
newdata
blas_time_mean$sd = aggregate(blas_time ~ columns_and_rows, data=results, FUN=sd)$blas_time
blas_plot <- ggplot(blas_time_mean, aes(x=columns_and_rows, y=blas_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=blas_time - sd, ymax=blas_time + sd)) + labs(title="BLAS mulitplication time",
x="Size", y = "Time") + theme_light()
blas_plot
fit = lm( blas_time ~ poly(columns_and_rows, 3, raw=TRUE), data=blas_time_mean)
newdata = data.frame(columns_and_rows = seq(50,1000, len=250))
newdata$y = predict(fit, newdata)
last_plot() + geom_line(data=newdata, aes(colums_and_rows,y))
blas_time_mean$sd = aggregate(blas_time ~ columns_and_rows, data=results, FUN=sd)$blas_time
blas_plot <- ggplot(blas_time_mean, aes(x=columns_and_rows, y=blas_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=blas_time - sd, ymax=blas_time + sd)) + labs(title="BLAS mulitplication time",
x="Size", y = "Time") + theme_light()
blas_plot
fit = lm( blas_time ~ poly(columns_and_rows, 3, raw=TRUE), data=blas_time_mean)
newdata = data.frame(columns_and_rows = seq(50,1000, len=250))
newdata$y = predict(fit, newdata)
last_plot() + geom_line(data=newdata, aes(columns_and_rows,y))
last_plot() + geom_line(data=newdata, aes(columns_and_rows,y), col = "blue")
fit_blas = lm( blas_time ~ poly(columns_and_rows, 3, raw=TRUE), data=blas_time_mean)
newdata = data.frame(columns_and_rows = seq(50,1000, len=250))
newdata$y = predict(fit_blas, newdata)
last_plot() + geom_line(data=newdata, aes(columns_and_rows,y), col = "blue")
better_time_mean$sd = aggregate( better_time ~ columns_and_rows, data=results, FUN=sd)$better_time
better_plot <- ggplot(better_time_mean, aes(x=columns_and_rows, y=better_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=better_time - sd, ymax=better_time + sd)) + labs(title="Better mulitplication time",
x="Size", y = "Time") + theme_light()
better_plot
fit_better = lm( better_time ~ poly(columns_and_rows, 3, raw=TRUE), data=better_time_mean)
newdata = data.frame(columns_and_rows = seq(50,1000, len=250))
newdata$y = predict(fit_blas, newdata)
last_plot() + geom_line(data=newdata, aes(columns_and_rows,y), col = "blue")
newdata = data.frame(columns_and_rows = seq(50,1000, len=250))
newdata$y = predict(fit_blas, newdata)
better_time_mean$sd = aggregate( better_time ~ columns_and_rows, data=results, FUN=sd)$better_time
better_plot <- ggplot(better_time_mean, aes(x=columns_and_rows, y=better_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=better_time - sd, ymax=better_time + sd)) + labs(title="Better mulitplication time",
x="Size", y = "Time") + theme_light()
better_plot
fit_better = lm( better_time ~ poly(columns_and_rows, 3, raw=TRUE), data=better_time_mean)
newdata = data.frame(columns_and_rows = seq(50,1000, len=250))
newdata$y = predict(fit_better, newdata)
last_plot() + geom_line(data=newdata, aes(columns_and_rows,y), col = "blue")
fit_naive = lm( naive_time ~ poly(columns_and_rows, 3, raw=TRUE), data=naive_time_mean)
newdata = data.frame(columns_and_rows = seq(50,1000, len=250))
newdata$y = predict(fit_naive, newdata)
last_plot() + geom_line(data=newdata, aes(columns_and_rows,y), col = "blue")
naive_time_mean$sd = aggregate( naive_time ~ columns_and_rows, data=results, FUN=sd)$naive_time
naive_plot <- ggplot(naive_time_mean, aes(x=columns_and_rows, y=naive_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=naive_time - sd, ymax=naive_time + sd)) + labs(title="Naive mulitplication time",
x="Size", y = "Time") + theme_light()
naive_plot
#polynomial
fit_naive = lm( naive_time ~ poly(columns_and_rows, 3, raw=TRUE), data=naive_time_mean)
newdata = data.frame(columns_and_rows = seq(50,1000, len=250))
newdata$y = predict(fit_naive, newdata)
last_plot() + geom_line(data=newdata, aes(columns_and_rows,y), col = "blue")
naive_time_mean$sd = aggregate( naive_time ~ columns_and_rows, data=results, FUN=sd)$naive_time
naive_plot <- ggplot(naive_time_mean, aes(x=columns_and_rows, y=naive_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=naive_time - sd, ymax=naive_time + sd)) + labs(title="Naive mulitplication time",
x="Size", y = "Time") + theme_light()
naive_plot
#polynomial
fit_naive = lm( naive_time ~ poly(columns_and_rows, 3, raw=TRUE), data=naive_time_mean)
naivedata = data.frame(columns_and_rows = seq(50,1000, len=250))
naivedata$y = predict(fit_naive, newdata)
last_plot() + geom_line(data=naivedata, aes(columns_and_rows,y), col = "blue")
fit_better = lm( better_time ~ poly(columns_and_rows, 3, raw=TRUE), data=better_time_mean)
better_data = data.frame(columns_and_rows = seq(50,1000, len=250))
better_data$y = predict(fit_better, better_data)
last_plot() + geom_line(data=better_data, aes(columns_and_rows,y), col = "blue")
better_time_mean$sd = aggregate( better_time ~ columns_and_rows, data=results, FUN=sd)$better_time
better_plot <- ggplot(better_time_mean, aes(x=columns_and_rows, y=better_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=better_time - sd, ymax=better_time + sd)) + labs(title="Better mulitplication time",
x="Size", y = "Time") + theme_light()
better_plot
#polynomial
fit_better = lm( better_time ~ poly(columns_and_rows, 3, raw=TRUE), data=better_time_mean)
better_data = data.frame(columns_and_rows = seq(50,1000, len=250))
better_data$y = predict(fit_better, better_data)
last_plot() + geom_line(data=better_data, aes(columns_and_rows,y), col = "blue")
fit_blas = lm( blas_time ~ poly(columns_and_rows, 3, raw=TRUE), data=blas_time_mean)
blas_data = data.frame(columns_and_rows = seq(50,1000, len=250))
blas_data$y = predict(fit_blas, blas_data)
last_plot() + geom_line(data=blas_data, aes(columns_and_rows,y), col = "blue")
geom_line(data=blas_data, aes(columns_and_rows,y), col = "blue")
ggplot(data=blas_data, aes(columns_and_rows,y), col = "blue")
plot(naivedata)
lines(naivedata)
lines(better_data)
plot(naivedata, type="1", lwd = 2)
plot(naivedata, type='1', lwd = 2)
?plot
plot(naivedata, type='l', lwd = 2)
plot(naivedata, type='l', lwd = 2, ylabel = "Time", xlabel = "Size")
plot(naivedata, type='l', lwd = 2, ylabel = "Time", xlabel = "Size")
?plot
plot(naivedata, type='l', lwd = 2, ylab = "Time", xlab = "Size")
plot(naivedata, type='l', lwd = 2, ylab = "Time", xlab = "Size", title = comparsion)
plot(naivedata, type='l', lwd = 2, ylab = "Time", xlab = "Size", title = "Comparsion")
plot(naivedata, type='l', lwd = 2, ylab = "Time", xlab = "Size", main = "Comparsion")
warnings()
plot(naivedata, type='l', lwd = 2, ylab = "Time", xlab = "Size", main = "Comparsion")
plot(naivedata, type='l', lwd = 2, ylab = "Time", xlab = "Size", main = "Comparsion", col = "Red")
lines(better_data, lwd = 2, col = "Orange")
lines(blas_data, lwd = 2, col = "darkgreen")
?legend
##COMPARSION
plot(naivedata, type='l', lwd = 2, ylab = "Time", xlab = "Size", main = "Comparsion", col = "Red")
lines(better_data, lwd = 2, col = "Orange")
lines(blas_data, lwd = 2, col = "darkgreen")
legend(x=0, y = 0, legend = c("naive", "better", "blas"))
legend(topright, legend = c("naive", "better", "blas"))
legend("topleft", legend = c("naive", "better", "blas"))
legend("topleft", legend = c("naive", "better", "blas"), col = c("red", "orange", "darkgreen"))
legend("topleft", legend = c("naive", "better", "blas"), col = c("red", "orange", "darkgreen"))
plot(naivedata, type='l', lwd = 2, ylab = "Time", xlab = "Size", main = "Comparsion", col = "Red")
lines(better_data, lwd = 2, col = "Orange")
lines(blas_data, lwd = 2, col = "darkgreen")
legend("topleft", col = c("red", "orange", "darkgreen"), legend = c("naive", "better", "blas") )
plot(naivedata, type='l', lwd = 2, ylab = "Time", xlab = "Size", main = "Comparsion", col = "Red")
lines(better_data, lwd = 2, col = "Orange")
lines(blas_data, lwd = 2, col = "darkgreen")
legend("topright", col = c("red", "orange", "darkgreen"), legend = c("naive", "better", "blas") )
plot(naivedata, type='l', lwd = 2, ylab = "Time", xlab = "Size", main = "Comparsion", col = "Red")
lines(better_data, lwd = 2, col = "Orange")
lines(blas_data, lwd = 2, col = "darkgreen")
legend("topright", col = c("red", "orange", "darkgreen"), legend = c("naive", "better", "blas"), lty= 1:3 )
plot(naivedata, type='l', lwd = 2, ylab = "Time", xlab = "Size", main = "Comparsion", col = "Red")
lines(better_data, lwd = 2, col = "Orange")
lines(blas_data, lwd = 2, col = "darkgreen")
legend("topright", col = c("red", "orange", "darkgreen"), legend = c("naive", "better", "blas"), lty = 1 )
plot(naivedata, type='l', lwd = 2, ylab = "Time", xlab = "Size", main = "Comparsion", col = "Red")
lines(better_data, lwd = 2, col = "Orange")
lines(blas_data, lwd = 2, col = "darkgreen")
legend("topleft", col = c("red", "orange", "darkgreen"), legend = c("naive", "better", "blas"), lty = 1 )
results = read.csv("resultO0.csv", sep = ";")
naive_time_mean = aggregate(naive_time ~ columns_and_rows, data = results, FUN = mean)
better_time_mean = aggregate(better_time ~ columns_and_rows, data = results, FUN = mean)
blas_time_mean = aggregate(blas_time ~ columns_and_rows, data = results, FUN = mean)
####################
#naive
####################
naive_time_mean$sd = aggregate( naive_time ~ columns_and_rows, data=results, FUN=sd)$naive_time
naive_plot <- ggplot(naive_time_mean, aes(x=columns_and_rows, y=naive_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=naive_time - sd, ymax=naive_time + sd)) + labs(title="Naive mulitplication time",
x="Size", y = "Time") + theme_light()
naive_plot
#polynomial
fit_naive = lm( naive_time ~ poly(columns_and_rows, 3, raw=TRUE), data=naive_time_mean)
naive_data = data.frame(columns_and_rows = seq(50,1000, len=250))
naive_data$y = predict(fit_naive, naive_data)
last_plot() + geom_line(data=naive_data, aes(columns_and_rows,y), col = "blue")
####################
#better
####################
better_time_mean$sd = aggregate( better_time ~ columns_and_rows, data=results, FUN=sd)$better_time
better_plot <- ggplot(better_time_mean, aes(x=columns_and_rows, y=better_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=better_time - sd, ymax=better_time + sd)) + labs(title="Better mulitplication time",
x="Size", y = "Time") + theme_light()
better_plot
#polynomial
fit_better = lm( better_time ~ poly(columns_and_rows, 3, raw=TRUE), data=better_time_mean)
better_data = data.frame(columns_and_rows = seq(50,1000, len=250))
better_data$y = predict(fit_better, better_data)
last_plot() + geom_line(data=better_data, aes(columns_and_rows,y), col = "blue")
####################
#blas
####################
blas_time_mean$sd = aggregate(blas_time ~ columns_and_rows, data=results, FUN=sd)$blas_time
blas_plot <- ggplot(blas_time_mean, aes(x=columns_and_rows, y=blas_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=blas_time - sd, ymax=blas_time + sd)) + labs(title="BLAS mulitplication time",
x="Size", y = "Time") + theme_light()
blas_plot
#polynomial
fit_blas = lm( blas_time ~ poly(columns_and_rows, 3, raw=TRUE), data=blas_time_mean)
blas_data = data.frame(columns_and_rows = seq(50,1000, len=250))
blas_data$y = predict(fit_blas, blas_data)
last_plot() + geom_line(data=blas_data, aes(columns_and_rows,y), col = "blue")
##################
##COMPARSION
##################
plot(naivedata, type='l', lwd = 2, ylab = "Time", xlab = "Size", main = "Comparsion", col = "Red")
lines(better_data, lwd = 2, col = "Orange")
lines(blas_data, lwd = 2, col = "darkgreen")
legend("topleft", col = c("red", "orange", "darkgreen"), legend = c("naive", "better", "blas"), lty = 1 )
####################
#naive
####################
naive_time_mean$sd = aggregate( naive_time ~ columns_and_rows, data=results, FUN=sd)$naive_time
results = read.csv("resultO0.csv", sep = ";")
naive_time_mean = aggregate(naive_time ~ columns_and_rows, data = results, FUN = mean)
better_time_mean = aggregate(better_time ~ columns_and_rows, data = results, FUN = mean)
blas_time_mean = aggregate(blas_time ~ columns_and_rows, data = results, FUN = mean)
####################
#naive
####################
naive_time_mean$sd = aggregate( naive_time ~ columns_and_rows, data=results, FUN=sd)$naive_time
naive_plot <- ggplot(naive_time_mean, aes(x=columns_and_rows, y=naive_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=naive_time - sd, ymax=naive_time + sd)) + labs(title="Naive mulitplication time",
x="Size", y = "Time") + theme_light()
naive_plot
#polynomial
fit_naive = lm( naive_time ~ poly(columns_and_rows, 3, raw=TRUE), data=naive_time_mean)
naive_data = data.frame(columns_and_rows = seq(50,1000, len=250))
naive_data$y = predict(fit_naive, naive_data)
last_plot() + geom_line(data=naive_data, aes(columns_and_rows,y), col = "blue")
####################
#better
####################
better_time_mean$sd = aggregate( better_time ~ columns_and_rows, data=results, FUN=sd)$better_time
better_plot <- ggplot(better_time_mean, aes(x=columns_and_rows, y=better_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=better_time - sd, ymax=better_time + sd)) + labs(title="Better mulitplication time",
x="Size", y = "Time") + theme_light()
better_plot
#polynomial
fit_better = lm( better_time ~ poly(columns_and_rows, 3, raw=TRUE), data=better_time_mean)
better_data = data.frame(columns_and_rows = seq(50,1000, len=250))
better_data$y = predict(fit_better, better_data)
last_plot() + geom_line(data=better_data, aes(columns_and_rows,y), col = "blue")
####################
#blas
####################
blas_time_mean$sd = aggregate(blas_time ~ columns_and_rows, data=results, FUN=sd)$blas_time
blas_plot <- ggplot(blas_time_mean, aes(x=columns_and_rows, y=blas_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=blas_time - sd, ymax=blas_time + sd)) + labs(title="BLAS mulitplication time",
x="Size", y = "Time") + theme_light()
blas_plot
#polynomial
fit_blas = lm( blas_time ~ poly(columns_and_rows, 3, raw=TRUE), data=blas_time_mean)
blas_data = data.frame(columns_and_rows = seq(50,1000, len=250))
blas_data$y = predict(fit_blas, blas_data)
last_plot() + geom_line(data=blas_data, aes(columns_and_rows,y), col = "blue")
##################
##COMPARSION
##################
plot(naivedata, type='l', lwd = 2, ylab = "Time", xlab = "Size", main = "Comparsion", col = "Red")
lines(better_data, lwd = 2, col = "Orange")
lines(blas_data, lwd = 2, col = "darkgreen")
legend("topleft", col = c("red", "orange", "darkgreen"), legend = c("naive", "better", "blas"), lty = 1 )
results = read.csv("resultO0.csv", sep = ";")
naive_time_mean = aggregate(naive_time ~ columns_and_rows, data = results, FUN = mean)
better_time_mean = aggregate(better_time ~ columns_and_rows, data = results, FUN = mean)
blas_time_mean = aggregate(blas_time ~ columns_and_rows, data = results, FUN = mean)
####################
#naive
####################
naive_time_mean$sd = aggregate( naive_time ~ columns_and_rows, data=results, FUN=sd)$naive_time
naive_plot <- ggplot(naive_time_mean, aes(x=columns_and_rows, y=naive_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=naive_time - sd, ymax=naive_time + sd)) + labs(title="Naive mulitplication time",
x="Size", y = "Time") + theme_light()
naive_plot
#polynomial
fit_naive = lm( naive_time ~ poly(columns_and_rows, 3, raw=TRUE), data=naive_time_mean)
naive_data = data.frame(columns_and_rows = seq(50,1000, len=250))
naive_data$y = predict(fit_naive, naive_data)
last_plot() + geom_line(data=naive_data, aes(columns_and_rows,y), col = "blue")
####################
#better
####################
better_time_mean$sd = aggregate( better_time ~ columns_and_rows, data=results, FUN=sd)$better_time
better_plot <- ggplot(better_time_mean, aes(x=columns_and_rows, y=better_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=better_time - sd, ymax=better_time + sd)) + labs(title="Better mulitplication time",
x="Size", y = "Time") + theme_light()
better_plot
#polynomial
fit_better = lm( better_time ~ poly(columns_and_rows, 3, raw=TRUE), data=better_time_mean)
better_data = data.frame(columns_and_rows = seq(50,1000, len=250))
better_data$y = predict(fit_better, better_data)
last_plot() + geom_line(data=better_data, aes(columns_and_rows,y), col = "blue")
####################
#blas
####################
blas_time_mean$sd = aggregate(blas_time ~ columns_and_rows, data=results, FUN=sd)$blas_time
blas_plot <- ggplot(blas_time_mean, aes(x=columns_and_rows, y=blas_time)) + geom_point(color="red") +
geom_errorbar(aes(ymin=blas_time - sd, ymax=blas_time + sd)) + labs(title="BLAS mulitplication time",
x="Size", y = "Time") + theme_light()
blas_plot
#polynomial
fit_blas = lm( blas_time ~ poly(columns_and_rows, 3, raw=TRUE), data=blas_time_mean)
blas_data = data.frame(columns_and_rows = seq(50,1000, len=250))
blas_data$y = predict(fit_blas, blas_data)
last_plot() + geom_line(data=blas_data, aes(columns_and_rows,y), col = "blue")
##################
##COMPARSION
##################
plot(naive_data, type='l', lwd = 2, ylab = "Time", xlab = "Size", main = "Comparsion", col = "Red")
lines(better_data, lwd = 2, col = "Orange")
lines(blas_data, lwd = 2, col = "darkgreen")
legend("topleft", col = c("red", "orange", "darkgreen"), legend = c("naive", "better", "blas"), lty = 1 )
getwd()
